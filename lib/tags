!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
Abbrev	/Users/evankoch/code/census_for/lib/census_for.rb	/^  class Abbrev$/;"	c	language:Ruby	class:CensusFor
CensusData	/Users/evankoch/code/census_for/lib/census_for.rb	/^  class CensusData$/;"	c	language:Ruby	class:CensusFor
CensusFor	/Users/evankoch/code/census_for/lib/census_for.rb	/^class CensusFor$/;"	c	language:Ruby
converter	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.converter(abbrev)$/;"	F	language:Ruby	class:CensusFor.Abbrev
County	/Users/evankoch/code/census_for/lib/census_for.rb	/^  class County$/;"	c	language:Ruby	class:CensusFor
data	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.data$/;"	F	language:Ruby	class:CensusFor.CensusData
load_data	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.load_data$/;"	F	language:Ruby	class:CensusFor.CensusData
parse_county_state	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.parse_county_state(county_state)$/;"	F	language:Ruby	class:CensusFor.County
population	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.population(request)$/;"	F	language:Ruby	class:CensusFor.County
population	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.population(request)$/;"	F	language:Ruby	class:CensusFor.State
population_lookup	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.population_lookup(county_state)$/;"	F	language:Ruby	class:CensusFor.County
population_lookup	/Users/evankoch/code/census_for/lib/census_for.rb	/^    def self.population_lookup(state)$/;"	F	language:Ruby	class:CensusFor.State
State	/Users/evankoch/code/census_for/lib/census_for.rb	/^  class State$/;"	c	language:Ruby	class:CensusFor
